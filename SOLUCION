EN ESTE PUNTO SE CREARON 5 CLASES PARA SOLUCIONAR EL PROBLEMA, ESTARE SEÃ‘ALIZANDO CUANDO EMPIEZA CADA UNA:
__________________________________________________________________________________________________________

package com.mycompany.cache;

import java.util.HashMap;
import java.util.Map;

public class CacheProduct {
    private final Map<String, Product> cache;

    public CacheProduct() {
        cache = new HashMap<>();
    }

    public void put(String productId, Product product) {
        cache.put(productId, product);
    }

    public Product get(String productId) {
        return cache.get(productId);
    }

    public void remove(String productId) {
        cache.remove(productId);
    }

    public void clear() {
        cache.clear();
    }

    @Override
    public String toString() {
        return "CacheProduct{" + "cache=" + cache + '}';
    }
}
_________________________________________________________________________________________________________________

package com.mycompany.cache;

import java.util.HashMap;
import java.util.Map;

public class CacheBranch {
    private final Map<String, Branch> cache;

    public CacheBranch() {
        cache = new HashMap<>();
    }

    public void put(String branchId, Branch branch) {
        cache.put(branchId, branch);
    }

    public Branch get(String branchId) {
        return cache.get(branchId);
    }

    public void remove(String branchId) {
        cache.remove(branchId);
    }

    public void clear() {
        cache.clear();
    }

    @Override
    public String toString() {
        return "CacheBranch{" + "cache=" + cache + '}';
    }
}
____________________________________________________________________________________________________________________

package com.mycompany.cache;

public class Product {
    private String id;
    private String name;
    private double price;

    // Constructor
    public Product(String id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }

    // Getters y Setters
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    @Override
    public String toString() {
        return "Product{" +
               "id='" + id + '\'' +
               ", name='" + name + '\'' +
               ", price=" + price +
               '}';
    }
}
______________________________________________________________________

package com.mycompany.cache;

public class Branch {
    private String id;
    private String name;
    private String location;

    // Constructor
    public Branch(String id, String name, String location) {
        this.id = id;
        this.name = name;
        this.location = location;
    }

    // Getters y Setters
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @Override
    public String toString() {
        return "Branch{" +
               "id='" + id + '\'' +
               ", name='" + name + '\'' +
               ", location='" + location + '\'' +
               '}';
    }
}
_________________________________________________________________________________________________

package com.mycompany.cache;

public class CacheTest {
    public static void main(String[] args) {
        CacheProduct productCache = new CacheProduct();
        CacheBranch branchCache = new CacheBranch();

        Product product = new Product("1", "Laptop", 999.99);
        Branch branch = new Branch("1", "Main Branch", "123 Main St");

        productCache.put(product.getId(), product);
        branchCache.put(branch.getId(), branch);

        System.out.println("Product from cache: " + productCache.get("1"));
        System.out.println("Branch from cache: " + branchCache.get("1"));
    }
}
